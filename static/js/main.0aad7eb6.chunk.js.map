{"version":3,"sources":["assets/logo.svg","components/Header.tsx","components/PeopleListItem.tsx","components/PeopleList.tsx","components/PageDescription.tsx","components/PageTitle.tsx","components/Search.tsx","App.tsx","index.tsx"],"names":["StyledHeader","styled","header","Header","src","logo","className","width","height","alt","StyledListItem","li","StyledAvatar","div","StyledInfo","StyledName","StyledDescription","Avatar","altText","imgUrl","PersonInfo","name","description","PeopleListItem","person","avatar","PeopleList","people","searchString","filteredPeople","filter","toLowerCase","includes","map","id","StyledPageDescription","p","PageDescription","StyledPageTitle","h1","PageTitle","StyledSearchInput","input","Search","value","onChange","type","placeholder","e","target","StyledApp","Main","main","App","useState","setSearchString","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,MAA0B,iC,OCMnCA,EAAeC,IAAOC,OAAV,0EAKLC,EAAS,kBACpB,cAACH,EAAD,UACE,qBACEI,IAAKC,EACLC,UAAU,UACVC,MAba,GAcbC,OAbc,GAcdC,IAAI,YCRJC,EAAiBT,IAAOU,GAAV,sEAKdC,EAAeX,IAAOY,IAAV,sHAPE,OAcdC,EAAab,IAAOY,IAAV,+FAMVE,EAAad,IAAOY,IAAV,+IAQVG,EAAoBf,IAAOY,IAAV,yHAYjBI,EAA2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAZ,OAC/B,cAACP,EAAD,UACE,qBACER,IAAKe,EACLZ,MAAO,OACPC,OAAQ,OACRC,IAAKS,OAULE,EAAmC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAT,OACvC,eAACR,EAAD,WACE,cAACC,EAAD,UAAaM,IACb,cAACL,EAAD,UAAoBM,QAQXC,EAA2C,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACtD,eAACd,EAAD,WACE,cAAC,EAAD,CAAQQ,QAASM,EAAOH,KAAMF,OAAQK,EAAOC,SAC7C,cAAC,EAAD,CAAYJ,KAAMG,EAAOH,KAAMC,YAAaE,EAAOF,kBClE1CI,EAAmC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACnDC,EAAiBF,EAAOG,QAAO,SAACN,GACpC,OAAOA,EAAOH,KAAKU,cAAcC,SAASJ,EAAaG,kBAGzD,OACE,6BACGF,EAAeI,KAAI,SAACT,GAAD,OAClB,cAAC,EAAD,CAEEA,OAAQA,GADHA,EAAOU,UCnBhBC,EAAwBlC,IAAOmC,EAAV,qHAQdC,EAAkB,kBAC7B,cAACF,EAAD,8MCTIG,EAAkBrC,IAAOsC,GAAV,uJASRC,EAAY,kBACvB,cAACF,EAAD,iCCJIG,EAAoBxC,IAAOyC,MAAV,6TAuBVC,EAA2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACtC,8BACE,cAACJ,EAAD,CACEK,KAAK,OACLC,YA7BmB,iBA8BnBH,MAAOA,EACPC,SAAU,SAACG,GAAD,OAAOH,EAASG,EAAEC,OAAOL,aCtBnCM,EAAYjD,IAAOY,IAAV,kFAJK,KASdsC,EAAOlD,IAAOmD,KAAV,+CARU,KAuCLC,MA3Bf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACN1B,EADM,KACQ2B,EADR,KAMb,OACE,eAACL,EAAD,WACE,cAAC,EAAD,IAEA,eAACC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEP,MAAOhB,EACPiB,SAAUU,IAEZ,cAAC,EAAD,CACE5B,OAAQ6B,EACR5B,aAAcA,WCtCxB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0aad7eb6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d33a1bb.svg\";","import styled from '@emotion/styled';\nimport logo from '../assets/logo.svg';\n\nconst LOGO_WIDTH = 60;\nconst LOGO_HEIGHT = 24;\n\nconst StyledHeader = styled.header`\n  margin-top: 20px;\n  margin-bottom: 104px;\n`;\n\nexport const Header = () => (\n  <StyledHeader>\n    <img\n      src={logo}\n      className=\"AppLogo\"\n      width={LOGO_WIDTH}\n      height={LOGO_HEIGHT}\n      alt=\"logo\"\n    />\n  </StyledHeader>\n);","import styled from '@emotion/styled';\nimport { FC } from 'react';\nimport { Person } from '../types';\n\n// TODO: improve performance by fetching \"paginated\" images\n// (i.e. batches of images by N list items above/below the items in view)\n// images should already be cached locally after initial fetch\n\nconst AVATAR_SIZE = 96;\n\nconst StyledListItem = styled.li`\n  display: flex;\n  margin-bottom: 24px;\n`;\n\nconst StyledAvatar = styled.div`\n  flex: 0 0 ${AVATAR_SIZE}px;\n  height: ${AVATAR_SIZE}px;\n  background-color: #C4C4C4;\n  border-radius: 2px;\n`;\n\nconst StyledInfo = styled.div`\n  margin-left: 24px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledName = styled.div`\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 1.5rem;\n  letter-spacing: -0.025rem;\n  color: #333333;\n`;\n\nconst StyledDescription = styled.div`\n  font-size: 14px;\n  line-height: 1.5rem;\n  letter-spacing: -0.015rem;\n  color: #666666;\n`;\n\ntype AvatarProps = {\n  altText: string;\n  imgUrl: string;\n}\n\nconst Avatar : FC<AvatarProps> = ({ altText, imgUrl }) => (\n  <StyledAvatar>\n    <img\n      src={imgUrl}\n      width={'100%'}\n      height={'100%'}\n      alt={altText}\n    />\n  </StyledAvatar>\n);\n\ntype PersonInfoProps = {\n  name: string;\n  description: string;\n}\n\nconst PersonInfo : FC<PersonInfoProps> = ({ name, description }) => (\n  <StyledInfo>\n    <StyledName>{name}</StyledName>\n    <StyledDescription>{description}</StyledDescription>\n  </StyledInfo>\n);\n\ntype PeopleListItemProps = {\n  person: Person\n};\n\nexport const PeopleListItem : FC<PeopleListItemProps> = ({ person }) => (\n  <StyledListItem>\n    <Avatar altText={person.name} imgUrl={person.avatar} />\n    <PersonInfo name={person.name} description={person.description} />\n  </StyledListItem>\n);","import { FC } from 'react';\nimport { PeopleListItem } from './PeopleListItem';\nimport { Person } from '../types';\n\n// TODO: improve performance using `react-window` for a recycled list:\n// https://github.com/bvaughn/react-window\n\ntype PeopleListProps = {\n  people: Array<Person>;\n  searchString: string;\n};\n\nexport const PeopleList : FC<PeopleListProps> = ({ people, searchString }) => {\n  const filteredPeople = people.filter((person) => {\n    return person.name.toLowerCase().includes(searchString.toLowerCase());\n  });\n\n  return (\n    <ul>\n      {filteredPeople.map((person) => (\n        <PeopleListItem\n          key={person.id}\n          person={person}\n        />\n      ))}\n    </ul>\n  );\n};","import styled from '@emotion/styled';\n\nconst StyledPageDescription = styled.p`\n  font-size: 16px;\n  line-height: 1.5rem;\n  color: #333333;\n\n  margin-bottom: 43px;\n`;\n\nexport const PageDescription = () => (\n  <StyledPageDescription>\n    If you just can’t find someone and need to know what they look like, you’ve come to the right place! Just type the name of the person you are looking for below into the search box!\n  </StyledPageDescription>\n);","import styled from '@emotion/styled';\n\nconst StyledPageTitle = styled.h1`\n  font-family: 'Georgia', serif;\n  font-size: 40px;\n  line-height: 1.1rem;\n  color: #102261;\n\n  margin-bottom: 50px;\n`;\n\nexport const PageTitle = () => (\n  <StyledPageTitle>\n    The Person Finder\n  </StyledPageTitle>\n);","import styled from '@emotion/styled';\nimport { FC } from 'react';\n\n// TODO:: comply with a11y standards\n// https://a11y-style-guide.com/style-guide/section-forms.html#kssref-forms-text-fields\n\nconst PLACEHOLDER_TEXT = 'Type a name...';\n\nconst StyledSearchInput = styled.input`\n  line-height: 1.5rem;\n  letter-spacing: -0.015rem;\n  width: 100%;\n  height: 40px;\n  margin-bottom: 43px;\n  padding: 10px 16px;\n  background-color: #EFEFEF;\n  color: #393939;\n  outline: none;\n  border: none;\n  border-radius: 4px;\n\n  &::placeholder {\n    color: #393939;\n  }\n`;\n\ntype SearchProps = {\n  value: string;\n  onChange: (str: string) => void;\n};\n\nexport const Search : FC<SearchProps> = ({ value, onChange }) => (\n  <div>\n    <StyledSearchInput\n      type=\"text\"\n      placeholder={PLACEHOLDER_TEXT}\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    />\n  </div>\n);","import React, { useState } from 'react';\nimport data from './assets/mockData.json';\nimport { Header } from './components/Header';\nimport { PeopleList } from './components/PeopleList';\nimport { PageDescription } from './components/PageDescription';\nimport { PageTitle } from './components/PageTitle';\nimport { Search } from './components/Search';\nimport styled from '@emotion/styled';\n\n// TODO: write tests for filter behavior\n\nconst PAGE_MARGIN = 132;\nconst LIST_MARGIN = 290;\n\n// NOTE: using `padding` instead of `margin` so the top border is full-width.\nconst StyledApp = styled.div`\n  border-top: 3px solid #33DBDB;\n  padding: 0 ${PAGE_MARGIN}px;\n`;\n\nconst Main = styled.main`\n  margin: 0 ${LIST_MARGIN}px;\n`;\n\nfunction App() {\n  const [searchString, setSearchString] = useState('');\n\n  // TODO: memoize `Search` callback for perf optimization?\n  // There's currently some input lag, likely due to rerender on every change.\n\n  return (\n    <StyledApp>\n      <Header />\n\n      <Main>\n        <PageTitle />\n        <PageDescription />\n        <Search\n          value={searchString}\n          onChange={setSearchString}\n        />\n        <PeopleList\n          people={data}\n          searchString={searchString}\n        />\n      </Main>\n\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}